<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- <annotation-driven /> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving
		up static resources in the ${webappRoot}/resources directory -->
	<resources location="/, classpath:/META-INF/web-resources/"
		mapping="/resources/**" />

	<!-- **************************************************************** -->
	<!-- RESOURCE FOLDERS CONFIGURATION -->
	<!-- Dispatcher configuration for serving static resources -->
	<!-- **************************************************************** -->
	<resources location="/images/" mapping="/images/**" />
	<resources location="/css/" mapping="/css/**" />
	<resources location="/dist/" mapping="/dist/**" />
	<resources location="/plugins/" mapping="/plugins/**" />
	<resources location="/bootstrap/" mapping="/bootstrap/**" />

	<!-- Allows for mapping the DispatcherServlet to "/" by forwarding static
		resource requests to the container's default Servlet -->
	<!-- <default-servlet-handler /> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<context:annotation-config />
	<context:component-scan base-package="com.mf.web" />

	<!-- register "global" interceptor beans to apply to all registered HandlerMappings -->
	<interceptors>
		<beans:bean
			class="org.springframework.web.servlet.theme.ThemeChangeInterceptor" />
		<beans:bean
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
			p:paramName="lang" />
		<beans:bean id="localeChangeInterceptor"
		      class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		    <beans:property name="paramName" value="language"/>
		</beans:bean>
	</interceptors>

	<!-- Resolves localized messages*.properties and application.properties
		files in the application to allow for internationalization. The messages*.properties
		files translate messages, the application.properties resource bundle localizes
		all application specific messages such as entity names and menu items. -->
	<beans:bean
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		id="messageSource" p:basenames="WEB-INF/i18n/messages,WEB-INF/i18n/application"
		p:fallbackToSystemLocale="false" />

	<beans:bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<beans:property name="defaultLocale" value="en" />
	</beans:bean>

	<!-- store preferred language configuration in a cookie -->
	<!-- <beans:bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver"
		id="localeResolver" p:cookieName="locale" /> -->

	<!-- <beans:bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<beans:property name="defaultLocale" value="en" />
	</beans:bean> -->



	<!-- <beans:bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping" >
		<beans:property name="interceptors">
		   <beans:list>
			<beans:ref bean="localeChangeInterceptor" />
		   </beans:list>
		</beans:property>
	</beans:bean> -->

	<!-- **************************************************************** -->
	<!-- THYMELEAF-SPECIFIC ARTIFACTS -->
	<!-- TemplateResolver <- TemplateEngine <- ViewResolver -->
	<!-- **************************************************************** -->
	<beans:bean id="templateResolver"
		class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<beans:property name="prefix" value="/WEB-INF/templates/" />
		<beans:property name="suffix" value=".html" />
		<beans:property name="templateMode" value="LEGACYHTML5" />
		<beans:property name="cacheable" value="false" />
	</beans:bean>

	<beans:bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<beans:property name="templateResolver" ref="templateResolver" />
	</beans:bean>

	<beans:bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<beans:property name="templateEngine" ref="templateEngine" />
		<beans:property name="order" value="1" />
		<beans:property name="characterEncoding" value="UTF-8"/>
	</beans:bean>

	<!-- Hibernate -->
	<!-- Invalid property 'dialect' of bean class [org.apache.commons.dbcp.BasicDataSource -->
	<beans:bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<beans:property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
		<beans:property name="url" value="jdbc:sqlserver://loplayers.com:1433;databaseName=fts;" />
		<beans:property name="username" value="sa" />
		<beans:property name="password" value="selinahebe" />
	</beans:bean>

	<beans:bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="hibernateProperties">
         <beans:props>
            <beans:prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</beans:prop>
         </beans:props>
      </beans:property>
	</beans:bean>

	<tx:annotation-driven />
	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>

	<!-- Spring Beans -->
	<beans:bean id="securityDAO" class="com.mf.web.dao.SecurityDAOImpl"></beans:bean>
	<beans:bean id="securityService" class="com.mf.web.service.SecurityServiceImpl"></beans:bean>
</beans:beans>
